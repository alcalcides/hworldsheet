
SHOW DATABASES;
STATUS;
SHOW CREATE TABLE nomeDaTabela; 
SHOW CREATE DATABASE nomeDoBancoDeDados; 


CREATE DATABASE nomeDoBancoDeDados
	DEFAULT CHARACTER SET utf8
	DEFAULT COLLATE utf8_general_ci;

USE nomeDoBancoDeDados;

CREATE DATABASE IF NOT EXISTS nomeDoBancoDeDados;

DROP DATABASE nomeDoBancoDeDados;



USE nomeDoBancoDeDados;
CREATE TABLE IF NOT EXISTS nomeDaTabela(
	nomeDoCampo1 INT UNSIGNED NOT NULL AUTO_INCREMENT,
	nomeDoCampo2 VARCHAR(10) UNIQUE NOT NULL DEFAULT '',
    nomeDoCampo3 INT NOT NULL,
    nomeDoCampo4 DECIMAL(5,2), 
    nomeDoCampo5 ENUM('M', 'F'), 
    nomeDoCampo6 VARCHAR(10) DEFAULT 'Brazil', 
    INDEX (nomeDoCampo2),
    PRIMARY KEY (nomeDoCampo1),
    CONSTRAINT nomeDaLimitacao FOREIGN KEY (nomeDoCampo2) REFERENCES nomeDaTabela1(nomeDoCampo2naTabela1),
    INDEX nomeDoIndice(nomedoCampo2)
)
ENGINE = InnoDB DEFAULT CHARSET = utf8;

SHOW TABLES;

DESCRIBE nomeDaTabela; 
DESC nomeDaTabela;




ALTER TABLE nomeDaTabela ADD COLUMN nomeDoNovoCampo INT NOT NULL; 
ALTER TABLE nomeDaTabela ADD nomeDoNovoCampo INT NOT NULL;


ALTER TABLE nomeDaTabela ADD COLUMN nomeDoNovoCampo INT NOT NULL AFTER nomeDoCampo1


ALTER TABLE nomeDaTabela ADD COLUMN nomeDoNovoCampo INT NOT NULL FIRST;


ALTER TABLE nomeDaTabela ADD PRIMARY KEY (campoTal);


ALTER TABLE nomeDaTabela CHANGE COLUMN nomeDoCampoAntigo nomeDoNovoCampo INT NOT NULL;


ALTER TABLE nomeDaTabela MODIFY COLUMN nomeDoCampo1 INT NOT NULL AUTO_INCREMENT;


ALTER TABLE nomeDaTabela DROP COLUMN nomeDoCamp


ALTER TABLE nomeAtualDaTabela RENAME TO novoNomeDaTabela;


ALTER TABLE nomeDaTabela ENGINE='InnoDB';


ALTER TABLE nomeDaTabela 
    ADD CONSTRAINT nomeDaLimitacao
    FOREIGN KEY (nomeDoCampo1)
    REFERENCES nomeDaTabela1(nomeDoCampo2);


ALTER TABLE nomeDaTabela DROP FOREIGN KEY nomeDaLimitacao;


ALTER TABLE nomeDaTabela ADD COLUMN chaveEst int;
ALTER TABLE nomeDaTabela FOREIGN KEY chaveEst REFERENCES tabTal(campoTal);



DROP TABLE nomeDaTabela;


INSERT INTO nomeDaTabela 
    (nomeDoCampo1, nomeDoCampo2, nomeDoCampo3,nomeDoCampo4)
    VALUES 
    (DEFAULT,'tal','yyyy-mm-dd',hh:mm:ss),
    (DEFAULT,'tal','yyyy-mm-dd',hh:mm:ss),
    (DEFAULT,'tal','yyyy-mm-dd',hh:mm:ss);



SELECT * FROM nomeDaTabela;
SELECT * FROM nomeDaTabela ORDER BY nomeDoCampo2 DESC;
SELECT * FROM nomeDaTabela ORDER BY nomeDoCampo2, nomeDoCampo3 ASC;
SELECT nomeDoCampo1, nomedoCampo2, nomeDoCampo3 FROM nomeDaTabela ORDER BY nomeDoCampo3;
SELECT nomeDoCampo1, nomeDoCampo2, nomeDoCampo3 FROM nomeDaTabela WHERE nomeDoCampo4!=NULL;
SELECT nomeDoCampo1, nomeDoCampo2, nomeDoCampo3 FROM nomeDaTabela WHERE nomeDoCampo4 = 5 ORDER BY nomeDoCampo3;
SELECT * FROM nomeDaTabela WHERE nomeDoCampo1 BETWEEN 10 AND 20;
SELECT * FROM nomeDaTabela WHERE nomeDoCampo1 BETWEEN 10 AND 20 ORDER BY nomeDoCampo1 DESC, nomedoCampo2 ASC; 
SELECT * FROM nomeDaTabela WHERE nomeDoCampo1 IN ('2', '5', '100');
SELECT DISTINCT nomeDoCampo1 FROM nomeDaTabela; 
SELECT COUNT(*) FROM nomeDaTabela; 
SELECT MAX(nomeDoCampo2) FROM nomeDaTabela; 
SELECT MIN(nomeDoCampo2) FROM nomeDaTabela; 
SELECT nomeDoCampo1, MIN(nomeDoCampo2) FROM nomeDaTabela; 
SELECT SUM(nomeDoCampo2) FROM nomeDaTabela; 
SELECT AVG(nomeDoCampo2) FROM nomeDaTabela; 
SELECT * FROM nomeDaTabela LIMIT 10; 
SELECT * FROM nomeDaTabela WHERE nomeDoCampo2 LIKE '%fragmento%';
SELECT * FROM nomeDaTabela WHERE nomeDoCampo2 NOT LIKE '%fragmento_%'; 



SELECT * FROM nomeDaTabela UNION SELECT * FROM nomeDaTabela1;


SELECT * FROM nomeDaTabela JOIN nomeDaTabela1 ON nomeDaTabela.nomeDoCampo1 = nomeDaTabela1.nomeDoCampo1;
SELECT * FROM nomeDaTabela JOIN nomeDaTabela1 USING (nomeDoCampo1) ORDER BY nomeDaTabela.nomeDoCampo1;
SELECT * FROM nomeDaTabela LEFT JOIN nomeDaTabela1 USING (nomeDoCampo1) ORDER BY nomeDaTabela.nomeDoCampo1;
SELECT * FROM nomeDaTabela RIGHT JOIN nomeDaTabela1 USING (nomeDoCampo1) ORDER BY nomeDaTabela.nomeDoCampo1;
SELECT t1.nomeDoCampo1, t1.nomeDoCampo2, t2.nomeDoCampo2, t2.nomeDoCampo3 FROM nomeDaTabela AS t1 JOIN nomeDaTabela1 AS t2;

SELECT nomeDoCampo4, COUNT(*) FROM nomeDaTabela GROUP BY nomeDoCampo4 ORDER BY nomeDoCampo4;

SELECT nomeDoCampo3, COUNT(*) FROM nomeDaTabela WHERE nomeDoCampo1 > 10
	GROUP BY nomeDoCampo3 HAVING nomeDoCampo3 >
		(SELECT avg(nomeDoCampo3) FROM nomeDaTabela)
	ORDER BY COUNT(*);	


UPDATE nomeDaTabela 
SET nomeDoCampo1=[value1],nomeDoCampo2=[value2],nomeDoCampo3=[value3] 
WHERE nomeDoCampo4=7
LIMIT 1;  



DELETE FROM nomeDaTabela 
WHERE 0
LIMIT 1;

TRUNCATE TABLE nomeDaTabela; 


CREATE INDEX nomeDoIndice ON nomeDaTabela(nomeDoCampo1(3),nomeDoCampo2(5)); 



ALTER TABLE nomeDaTabela DROP INDEX nomeDoIndice;


IF EXISTS (SELECT * FROM nomeDaTabela WHERE id=3) BEGIN  

END
ELSE

END



CREATE VIEW nomeDaVisualizacao AS
    SELECT 
        nomeDoCampo1 AS 'alias',
        nomeDoCampo2 AS 'alias1',
    FROM nomeDaTabela
    WHERE nomeDoCampo3 < 1.5;


ALTER VIEW nomeDaVisualizacao AS
    SELECT 
        nomeDoCampo1 AS 'alias',
        nomeDoCampo2 AS 'alias1',
    FROM nomeDaTabela
    WHERE nomeDoCampo3 < 1.5;


DROP VIEW nomeDaVisualizacao;


DELIMITER //
    CREATE PROCEDURE nomeDoProcedimento (IN nomeDoCampo1 INT) BEGIN
        DECLARE temp, temp1 VARCHAR(10);
        SELECT nomeDoCampo2, nomeDoCampo3 INTO temp,temp1 
            FROM nomeDaTabela 
            WHERE id = nomeDoCampo1;
        INSERT INTO nomeDaTabela1 VALUES (temp, temp1,nomeDoCampo1);
        DELETE FROM nomeDaTabela WHERE id = nomeDoCampo1;
    END;
//
CALL nomeDoProcedimento(SELECT id FROM nomeDaTabela WHERE status = NULL);


DELIMITER //
    DROP PROCEDURE IF EXISTS nomeDoProcedimento;
//


SELECT nomeDoCampo1 AS alias1, nomeDoCampo2 AS alias2 FROM nomeDaTabela aliasDaTabela;


START TRANSACTION ;



COMMIT;
ROLLBACK;


DELIMITER //
    CREATE TRIGGER nomeDoTrigger AFTER DELETE ON nomeDaTabela FOR EACH ROW BEGIN
        INSERT INTO nomeDaTabela1 VALUES (OLD.nomeDoCampo1, OLD.nomeDoCampo2);


    END;
//


LOAD DATA INFILE 'caminho/caminho.ext' INTO TABLE nomeDaTabela FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n';


SELECT * INTO OUTFILE 'caminho/caminho.ext' FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' FROM nomeDaTabela;


CREATE TABLE nomeDaTabela SELECT * FROM nomeDaTabela1;
CREATE TABLE nomeDaTabela SELECT * FROM nomeDaTabela1 nomeDoCampo1 nomedoCampo2 nomeDoCampo3;